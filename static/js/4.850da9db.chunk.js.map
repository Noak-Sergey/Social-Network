{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.tsx","utils/validators/validators.ts","hoc/withAuthRedirect.tsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHook.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","Input","required","value","maxLengthCreator","maxLength","length","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","to","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","profile","c","descriptionBlock","src","photos","large","Preloader","Post","item","message","likesCount","maxLength10","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","name","placeholder","validate","MyPosts","React","memo","console","log","postElements","posts","map","p","id","postsBlock","values","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileAPIContainer","userId","this","match","params","autorizedUserId","getUserProfile","getStatus","ProfileContainer","compose","withRouter"],"mappings":"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","file":"static/js/4.850da9db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1UTq0\",\"error\":\"FormsControls_error__1cNEC\",\"formSummaryError\":\"FormsControls_formSummaryError__3P4uL\"};","import React from \"react\";\nimport styles from './FormsControls.module.css'\nimport {WrappedFieldProps} from \"redux-form\";\n\nconst FormControl: React.FC<WrappedFieldProps> = ({input, meta:{touched, error},children}) => {\n    const hasError = touched && error\n    return (\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\n    const{input,  ...restProps} = props;\n    return <FormControl {...props}> <textarea {...input} {...restProps}/> </FormControl>\n}\n\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\n    const{input, ...restProps} = props;\n    return <FormControl {...props}> <input {...input} {...restProps}/> </FormControl>\n}","export const required = (value:string) => {\n    if(value) return undefined;\n\n    return 'Field is required';\n}\n\nexport const maxLengthCreator = (maxLength:number) => (value:string) => {\n    if(value && value.length > maxLength ) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}","import {Redirect} from \"react-router-dom\";\nimport React, {ComponentType} from \"react\";\nimport {AppStateType} from \"../Redux/redux-store\";\nimport {connect} from \"react-redux\";\n\ntype mapStateToPropsForRedirectType = {\n    isAuth: boolean\n}\nlet mapStateToPropsForRedirect = (state: AppStateType): mapStateToPropsForRedirectType => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\nexport function withAuthRedirect <T>(Component:ComponentType<T>) {\n\n    function RedirectComponent(props:mapStateToPropsForRedirectType) {\n        let {isAuth, ...restProps} = props\n\n        if (!isAuth) return <Redirect to={'/login'}/>\n\n        return <Component {...restProps as T} />\n\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n    return ConnectedAuthRedirectComponent\n}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3xcWX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2I0fP\",\"posts\":\"MyPosts_posts__32d6m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1VUa4\"};","import React, {ChangeEvent, useEffect, useState} from \"react\";\n\n\ntype ProfileStatusType = {\n    status: string\n    updateStatus: (status: string) => void\n}\n\nexport const ProfileStatusWithHooks: React.FC<ProfileStatusType> = (props) => {\n\n   let [editMode, setEditMode] = useState(false);\n   let [status, setStatus] = useState(props.status);\n\n   useEffect(() => {\n       setStatus(props.status)\n   },[props.status]);\n\n   const activateEditMode = () => {\n       setEditMode(true)\n   }\n\n   const deactivateEditMode = () => {\n       setEditMode(false);\n       props.updateStatus(status);\n   }\n\n   const onStatusChange = (e:ChangeEvent<HTMLInputElement>) => {\n       setStatus(e.currentTarget.value)\n   }\n\n    return (\n        <>\n            {!editMode &&\n            <div>\n                <span onDoubleClick={activateEditMode} > {props.status || 'Double click here'} </span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input onChange={onStatusChange} autoFocus={true}\n                       onBlur={deactivateEditMode} value={status} />\n            </div>\n            }\n        </>\n    )\n}\n","import React from \"react\";\nimport c from './ProfileInfo.module.css';\nimport {Preloader} from \"../../common/Preloader/Preloader\";\nimport {ProfileType} from \"../../../Redux/profile-reducer\";\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHook\";\n\n\ntype ProfileInfoType = {\n    profile: ProfileType | null\n    status:string\n    updateStatus: (status:string) => void\n}\n\nexport const ProfileInfo: React.FC<ProfileInfoType> = (props) => {\n    if (!props.profile) {\n        return <Preloader/>\n    }\n\n    return <div>\n        <div className={c.descriptionBlock}>\n            <img src={props.profile.photos.large} />\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\n            ava+description\n        </div>\n    </div>\n}\n\n","import React from \"react\";\nimport c from './Post.module.css';\n\ntype PostType = {\n    message:string\n    likesCount: number\n}\n\nconst Post: React.FC<PostType> = (props) => {\n    return (\n    <div className={c.item}>\n        <img\n            src='https://images.unsplash.com/photo-1445820200644-69f87d946277?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NHx8YW5pbWFsfGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'/>\n        {props.message}\n        <div>\n        <span>like </span> {props.likesCount}\n\n        </div>\n    </div>\n    )\n}\nexport default Post;","import React from \"react\";\nimport c from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport {PostsType} from \"../../../Redux/storeType\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\ntype MyPostsType = {\n    addPost: (postMessage: string) => void\n    posts: PostsType[]\n}\n\ntype AddNewPostFormType = {\n    newPostText:string\n}\n\nconst maxLength10 = maxLengthCreator(10)\n\nconst AddNewPostForm: React.FC<InjectedFormProps<AddNewPostFormType>> = (props) => {\n    return(\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       name='newPostText'\n                       placeholder='Enter your message'\n                       validate={[required,maxLength10,]}\n                />\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n}\n\nconst AddNewPostFormRedux = reduxForm<AddNewPostFormType>({form:'profileAddNewPostForm'})(AddNewPostForm)\n\nconst MyPosts = React.memo( (props: MyPostsType) => {\n    console.log('RENDER YO');\n\n    let postElements = props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>)\n\n    let onAddPost = (values: AddNewPostFormType) => {\n        props.addPost(values.newPostText);\n    }\n\n    return (\n        <div className={c.postsBlock}>\n            <h3>My posts</h3>\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\n            <div className={c.posts}>\n                {postElements}\n            </div>\n        </div>\n    )\n})\n\nexport default MyPosts;","import React from \"react\";\nimport {addPostActionCreator} from \"../../../Redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {RootStateType} from \"../../../Redux/redux-store\";\nimport {ActionsTypes} from \"../../../Redux/storeType\";\n\nlet mapStateToProps = (state:RootStateType) => {\n    return {\n        posts: state.profilePage.posts,\n    }\n}\n\ntype mapDispatchToPropsType = {\n    addPost:(newPostText:string) => void\n}\n\nlet mapDispatchToProps = (dispatch:(action: ActionsTypes) => void):mapDispatchToPropsType => {\n    return {\n        addPost: (newPostText: string) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n\n","import React from \"react\";\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport {ProfileType} from \"../../Redux/profile-reducer\";\n\ntype ProfilePropsType = {\n    profile: ProfileType | null\n    status: string\n    updateStatus: (status: string) => void\n}\n\nconst Profile: React.FC<ProfilePropsType> = (props) => {\n\n    return <div>\n\n        <ProfileInfo\n            profile={props.profile}\n            status={props.status}\n            updateStatus={props.updateStatus}/>\n        <MyPostsContainer />\n    </div>\n}\n\nexport default Profile;","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../Redux/redux-store\";\nimport {getStatus, getUserProfile, ProfileType, updateStatus} from \"../../Redux/profile-reducer\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\ntype MapStatePropsType = {\n    profile: ProfileType | null\n    status: string\n    autorizedUserId: string | null\n    isAuth:boolean\n}\ntype MapDispatchPropsType = {\n    getUserProfile: (userId: string) => void\n    getStatus: (userId: string) => void\n    updateStatus: (status: string) => void\n}\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\n\ntype PathParamsType = {\n    userId: string\n}\nexport type ProfileAPIContainerType = RouteComponentProps<PathParamsType> & OwnPropsType\n\nexport class ProfileAPIContainer extends React.Component<ProfileAPIContainerType> {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.autorizedUserId as string;\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId)\n    }\n\n    render() {\n        return (\n            <Profile {...this.props}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}\n            />\n        )\n    }\n}\n\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        autorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth,\n    }\n}\n\n// let AuthRedirectComponent = withAuthRedirect(ProfileAPIContainer);\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\n// export const ProfileContainer = connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent)\nexport const ProfileContainer = compose<React.ComponentType>(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter,\n    withAuthRedirect\n)(ProfileAPIContainer)\n\n\n\n"],"sourceRoot":""}