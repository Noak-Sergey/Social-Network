[{"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\index.tsx":"1","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\reportWebVitals.js":"2","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\store.ts":"3","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\App.tsx":"4","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\Dialogs.tsx":"5","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Navbar\\Navbar.tsx":"6","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Header\\Header.tsx":"7","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\Profile.tsx":"8","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\Message\\Message.tsx":"9","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"10","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"11","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"12","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"13","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\profile-reducer.ts":"14","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\dialogs-reducer.ts":"15","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\sidebar-reducer.ts":"16","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\redux-store.ts":"17","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"18","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\DialogsContainer.tsx":"19","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\users-reducer.ts":"20","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Users\\UsersContainer.tsx":"21","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Users\\Users.tsx":"22","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\common\\Preloader\\Preloader.tsx":"23","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\ProfileContainer.tsx":"24","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\auth-reducer.ts":"25","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Header\\HeaderContainer.tsx":"26","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\api\\api.ts":"27","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Login\\Login.tsx":"28","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\hoc\\withAuthRedirect.tsx":"29","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"30","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\utils\\validators\\validators.ts":"31","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\common\\FormsControls\\FormsControls.tsx":"32","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\AddMessageForm\\AddMessageForm.tsx":"33"},{"size":667,"mtime":1623593778698,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"35"},{"size":3393,"mtime":1619203830499,"results":"37","hashOfConfig":"35"},{"size":1333,"mtime":1630394432706,"results":"38","hashOfConfig":"35"},{"size":1310,"mtime":1631733717950,"results":"39","hashOfConfig":"35"},{"size":1049,"mtime":1626455234558,"results":"40","hashOfConfig":"35"},{"size":606,"mtime":1627646271560,"results":"41","hashOfConfig":"35"},{"size":626,"mtime":1631693609663,"results":"42","hashOfConfig":"35"},{"size":247,"mtime":1614622401799,"results":"43","hashOfConfig":"35"},{"size":412,"mtime":1614622401792,"results":"44","hashOfConfig":"35"},{"size":1754,"mtime":1631720664486,"results":"45","hashOfConfig":"35"},{"size":1016,"mtime":1630507199684,"results":"46","hashOfConfig":"35"},{"size":569,"mtime":1614623992327,"results":"47","hashOfConfig":"35"},{"size":3046,"mtime":1631691992768,"results":"48","hashOfConfig":"35"},{"size":1139,"mtime":1631649265666,"results":"49","hashOfConfig":"35"},{"size":176,"mtime":1624269231089,"results":"50","hashOfConfig":"35"},{"size":857,"mtime":1630588950209,"results":"51","hashOfConfig":"35"},{"size":839,"mtime":1631691311440,"results":"52","hashOfConfig":"35"},{"size":1131,"mtime":1631649416293,"results":"53","hashOfConfig":"35"},{"size":5065,"mtime":1630563538694,"results":"54","hashOfConfig":"35"},{"size":2935,"mtime":1630403333091,"results":"55","hashOfConfig":"35"},{"size":2079,"mtime":1629216099733,"results":"56","hashOfConfig":"35"},{"size":181,"mtime":1626444355885,"results":"57","hashOfConfig":"35"},{"size":2115,"mtime":1631693609650,"results":"58","hashOfConfig":"35"},{"size":1486,"mtime":1629352974753,"results":"59","hashOfConfig":"35"},{"size":1505,"mtime":1629316102598,"results":"60","hashOfConfig":"35"},{"size":1250,"mtime":1630489111663,"results":"61","hashOfConfig":"35"},{"size":1540,"mtime":1631781459665,"results":"62","hashOfConfig":"35"},{"size":850,"mtime":1630350919818,"results":"63","hashOfConfig":"35"},{"size":1518,"mtime":1630564613930,"results":"64","hashOfConfig":"35"},{"size":306,"mtime":1631719344129,"results":"65","hashOfConfig":"35"},{"size":849,"mtime":1631784241088,"results":"66","hashOfConfig":"35"},{"size":990,"mtime":1631734862786,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"ebhogb",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\index.tsx",[],["145","146"],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\reportWebVitals.js",[],["147","148"],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\store.ts",[],["149","150"],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\App.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\Dialogs.tsx",["151"],"import React from \"react\";\r\nimport c from './Dialogs.module.css'\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogPageType} from \"../../Redux/storeType\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AddMessageFormRedux, AddMessageFormType} from \"./AddMessageForm/AddMessageForm\";\r\n\r\nexport type DialogsType = {\r\n    dialogsPage: DialogPageType\r\n    sendMessage: (newMessageBody:string) => void\r\n    isAuth: boolean\r\n}\r\n\r\n\r\n\r\nexport const Dialogs: React.FC<DialogsType> = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>)\r\n    let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message}/>)\r\n\r\n\r\n    let addNewMessage = (values:AddMessageFormType) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n   // if(!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={c.dialogs}>\r\n            <div className={c.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={c.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Navbar\\Navbar.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Header\\Header.tsx",["152"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header: React.FC = () => {\r\n    return <header className={s.header}>\r\n        <img\r\n            src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRgPIy0hwSFb9IsEugadxiIDd1Mvp5DYDT2Vw&usqp=CAU'/>\r\n\r\n        <div className={s.loginBlock}>\r\n            <NavLink to={'/login'}>Login</NavLink>\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;\r\n\r\n","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\Profile.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\Message\\Message.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["153"],"import React from \"react\";\r\nimport c from './ProfileInfo.module.css';\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {ProfileType} from \"../../../Redux/profile-reducer\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\n\r\n\r\ntype ProfileInfoType = {\r\n    profile: ProfileType | null\r\n    status:string\r\n    updateStatus: (status:string) => void\r\n}\r\n\r\nexport const ProfileInfo: React.FC<ProfileInfoType> = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return <div>\r\n        {/*<div>*/}\r\n        {/*    <img src={'https://images.unsplash.com/photo-1546182990-dffeafbe841d?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8YW5pbWFsfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&w=1000&q=80'} alt={'Profile photo'}/>*/}\r\n        {/*</div>*/}\r\n        <div className={c.descriptionBlock}>\r\n            <img src={props.profile.photos.large} />\r\n            <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            ava+description\r\n        </div>\r\n    </div>\r\n}\r\n\r\n","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["154"],"import React from \"react\";\r\nimport c from './Post.module.css';\r\n\r\ntype PostType = {\r\n    message:string\r\n    likesCount: number\r\n}\r\n\r\nconst Post: React.FC<PostType> = (props) => {\r\n    return (\r\n    <div className={c.item}>\r\n        <img\r\n            src='https://images.unsplash.com/photo-1445820200644-69f87d946277?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NHx8YW5pbWFsfGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'/>\r\n        {props.message}\r\n        <div>\r\n        <span>like </span> {props.likesCount}\r\n\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Post;","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\profile-reducer.ts",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\dialogs-reducer.ts",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\sidebar-reducer.ts",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\redux-store.ts",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["155"],"import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../../Redux/redux-store\";\r\nimport {ActionsTypes} from \"../../../Redux/storeType\";\r\n\r\nlet mapStateToProps = (state:RootStateType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    addPost:(newPostText:string) => void\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch:(action: ActionsTypes) => void):mapDispatchToPropsType => {\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\users-reducer.ts",["156"],"import {\r\n    FollowSuccessACType,\r\n    SetCurrentPageACType,\r\n    SetTotalUsersCountACType,\r\n    SetUsersACType,\r\n    UnfollowSuccessACType,\r\n    UsersStateType,\r\n    UserType,\r\n    ToggleIsFetchingACType, ToggleIsFollowingInProgressACType,\r\n} from \"./storeType\";\r\nimport {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport const FOLLOW = 'FOLLOW';\r\nexport const UNFOLLOW = 'UNFOLLOW';\r\nexport const SET_USERS = 'SET_USERS';\r\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nexport const SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nexport const TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nexport const TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n};\r\n\r\nexport type ActionsTypes =\r\n    FollowSuccessACType\r\n    | UnfollowSuccessACType\r\n    | SetUsersACType\r\n    | SetCurrentPageACType\r\n    | SetTotalUsersCountACType\r\n    | ToggleIsFetchingACType\r\n    | ToggleIsFollowingInProgressACType\r\n\r\nexport const usersReducer = (state: UsersStateType = initialState, action: ActionsTypes): UsersStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.count}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId: number): FollowSuccessACType => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    }\r\n}\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessACType => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    }\r\n}\r\nexport const setUsers = (users: UserType[]): SetUsersACType => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n}\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageACType => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    }\r\n}\r\nexport const setTotalUsersCount = (totalCount: number): SetTotalUsersCountACType => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        count: totalCount\r\n    }\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingACType => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    }\r\n}\r\nexport const toggleIsFollowingInProgress = (followingInProgress: boolean, userId:number): ToggleIsFollowingInProgressACType => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        followingInProgress,\r\n        userId,\r\n    }\r\n}\r\n\r\n\r\nexport const getUsers = (currentPage: number,pageSize: number) => {\r\n    return (dispatch:Dispatch<ActionsTypes>) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n        });\r\n    }\r\n}\r\n\r\nexport const follow = (userId:number) => {\r\n    return (dispatch: Dispatch<ActionsTypes>) => {\r\n        dispatch(toggleIsFollowingInProgress(true, userId))\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleIsFollowingInProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId:number) => {\r\n    return (dispatch: Dispatch<ActionsTypes>) => {\r\n        dispatch(toggleIsFollowingInProgress(true, userId))\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleIsFollowingInProgress(false, userId));\r\n            });\r\n    }\r\n}","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Users\\UsersContainer.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Users\\Users.tsx",["157","158"],"import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {UserType} from \"../../Redux/storeType\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {usersAPI} from \"../../api/api\";\r\n\r\ntype UsersProps = {\r\n    users: Array<UserType>\r\n    follow: (id: number) => void\r\n    unfollow: (userId: number) => void\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    onPageChanged: (p: number) => void\r\n    followingInProgress: number[]\r\n}\r\n\r\nexport let Users = (props: UsersProps) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages: number[] = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n\r\n                return <span className={props.currentPage === p ? styles.selectedPage : \"\"}\r\n                             onClick={(e) => {\r\n                                 props.onPageChanged(p)\r\n                             }}> {p} </span>\r\n            })}\r\n        </div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n        <span>\r\n            <div>\r\n                <NavLink to={'/profile/' + u.id}>\r\n                <img alt={'waiting'} src={u.photos.small != null ? u.photos.small : userPhoto} className={styles.userPhoto}/>\r\n                </NavLink>\r\n    </div>\r\n    <div>\r\n    {u.followed\r\n        ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                  onClick={() => { props.unfollow(u.id) }} >Unfollow</button>\r\n        : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                  onClick={() => { props.follow(u.id) }} >Follow</button>}\r\n    </div>\r\n    </span>\r\n                <span>\r\n    <span>\r\n        <div>{u.name}</div><div>{u.status}</div>\r\n    </span>\r\n    <span>\r\n    <div>{'u.location.city'}</div>\r\n    <div>{'u.location.country'}</div>\r\n    </span>\r\n    </span>\r\n            </div>)\r\n        }\r\n    </div>\r\n}","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\common\\Preloader\\Preloader.tsx",["159"],"import React from \"react\";\r\nimport preloader from '../../../assets/images/preloader.gif'\r\n\r\nexport let Preloader = () => {\r\n    return <>\r\n        <img src={preloader}/>\r\n    </>\r\n}","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\ProfileContainer.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\auth-reducer.ts",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Header\\HeaderContainer.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\api\\api.ts",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Login\\Login.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\hoc\\withAuthRedirect.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\utils\\validators\\validators.ts",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\common\\FormsControls\\FormsControls.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\AddMessageForm\\AddMessageForm.tsx",[],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"160","replacedBy":"164"},{"ruleId":"162","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":6,"column":9,"nodeType":"168","messageId":"169","endLine":6,"endColumn":17},{"ruleId":"170","severity":1,"message":"171","line":7,"column":9,"nodeType":"172","endLine":8,"endColumn":120},{"ruleId":"170","severity":1,"message":"171","line":24,"column":13,"nodeType":"172","endLine":24,"endColumn":53},{"ruleId":"170","severity":1,"message":"171","line":12,"column":9,"nodeType":"172","endLine":13,"endColumn":182},{"ruleId":"166","severity":1,"message":"173","line":1,"column":8,"nodeType":"168","messageId":"169","endLine":1,"endColumn":13},{"ruleId":"174","severity":1,"message":"175","line":74,"column":65,"nodeType":"176","messageId":"177","endLine":74,"endColumn":67},{"ruleId":"166","severity":1,"message":"178","line":6,"column":8,"nodeType":"168","messageId":"169","endLine":6,"endColumn":13},{"ruleId":"166","severity":1,"message":"179","line":7,"column":9,"nodeType":"168","messageId":"169","endLine":7,"endColumn":17},{"ruleId":"170","severity":1,"message":"171","line":6,"column":9,"nodeType":"172","endLine":6,"endColumn":31},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],["180"],["181"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'axios' is defined but never used.","'usersAPI' is defined but never used.","no-global-assign","no-unsafe-negation"]