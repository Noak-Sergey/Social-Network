[{"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\index.tsx":"1","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\reportWebVitals.js":"2","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\store.ts":"3","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\App.tsx":"4","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\Dialogs.tsx":"5","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Navbar\\Navbar.tsx":"6","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Header\\Header.tsx":"7","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\Profile.tsx":"8","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\Message\\Message.tsx":"9","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"10","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"11","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"12","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"13","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\profile-reducer.ts":"14","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\dialogs-reducer.ts":"15","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\sidebar-reducer.ts":"16","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\redux-store.ts":"17","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"18","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\DialogsContainer.tsx":"19","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\users-reducer.ts":"20","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Users\\UsersContainer.tsx":"21","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Users\\Users.tsx":"22","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\common\\Preloader\\Preloader.tsx":"23","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\ProfileContainer.tsx":"24","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\auth-reducer.ts":"25","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Header\\HeaderContainer.tsx":"26","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\api\\api.ts":"27","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Login\\Login.tsx":"28"},{"size":667,"mtime":1623593778698,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":3393,"mtime":1619203830499,"results":"32","hashOfConfig":"30"},{"size":1329,"mtime":1629352867949,"results":"33","hashOfConfig":"30"},{"size":1582,"mtime":1629364964379,"results":"34","hashOfConfig":"30"},{"size":1049,"mtime":1626455234558,"results":"35","hashOfConfig":"30"},{"size":606,"mtime":1627646271560,"results":"36","hashOfConfig":"30"},{"size":403,"mtime":1626782915144,"results":"37","hashOfConfig":"30"},{"size":247,"mtime":1614622401799,"results":"38","hashOfConfig":"30"},{"size":412,"mtime":1614622401792,"results":"39","hashOfConfig":"30"},{"size":1374,"mtime":1624269231101,"results":"40","hashOfConfig":"30"},{"size":802,"mtime":1626713393841,"results":"41","hashOfConfig":"30"},{"size":569,"mtime":1614623992327,"results":"42","hashOfConfig":"30"},{"size":2808,"mtime":1629308485545,"results":"43","hashOfConfig":"30"},{"size":1525,"mtime":1629280505765,"results":"44","hashOfConfig":"30"},{"size":176,"mtime":1624269231089,"results":"45","hashOfConfig":"30"},{"size":880,"mtime":1629298370969,"results":"46","hashOfConfig":"30"},{"size":1095,"mtime":1624269230987,"results":"47","hashOfConfig":"30"},{"size":987,"mtime":1629354089157,"results":"48","hashOfConfig":"30"},{"size":5065,"mtime":1629296306369,"results":"49","hashOfConfig":"30"},{"size":2579,"mtime":1629216099721,"results":"50","hashOfConfig":"30"},{"size":2079,"mtime":1629216099733,"results":"51","hashOfConfig":"30"},{"size":181,"mtime":1626444355885,"results":"52","hashOfConfig":"30"},{"size":1868,"mtime":1629364964362,"results":"53","hashOfConfig":"30"},{"size":1486,"mtime":1629352974753,"results":"54","hashOfConfig":"30"},{"size":1505,"mtime":1629316102598,"results":"55","hashOfConfig":"30"},{"size":855,"mtime":1629301009353,"results":"56","hashOfConfig":"30"},{"size":88,"mtime":1629352802157,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"ebhogb",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\index.tsx",[],["125","126"],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\reportWebVitals.js",[],["127","128"],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\store.ts",[],["129","130"],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\App.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\Dialogs.tsx",["131"],"import React, {ChangeEvent} from \"react\";\r\nimport c from './Dialogs.module.css'\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogPageType} from \"../../Redux/storeType\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype DialogsType = {\r\n    dialogsPage:DialogPageType\r\n    updateNewMessageBody:(body:string) => void\r\n    sendMessage:() => void\r\n    isAuth: boolean\r\n}\r\n\r\nexport const Dialogs: React.FC<DialogsType> = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d =>  <DialogItem key={d.id} name={d.name} id={d.id}/> )\r\n    let messagesElements = state.messages.map( m => <Message key={m.id} message={m.message}/>)\r\n    let newMessageBody = state.newMessageBody\r\n\r\n    let onSendMessageClick = ()=> {\r\n        props.sendMessage();\r\n    }\r\n\r\n    let onNewMessageChange = (e:ChangeEvent<HTMLTextAreaElement>) => {\r\n       let body = e.target.value;\r\n       props.updateNewMessageBody(body);\r\n    }\r\n\r\n    if(props.isAuth === false) return <Redirect to={'/login'} />\r\n\r\n    return (\r\n        <div className={c.dialogs}>\r\n            <div className={c.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={c.messages}>\r\n                { messagesElements }\r\n            </div>\r\n            <div>\r\n            <textarea value={newMessageBody} onChange={onNewMessageChange}></textarea>\r\n            </div>\r\n            <div>\r\n            <button onClick={onSendMessageClick}>Send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Navbar\\Navbar.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Header\\Header.tsx",["132"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header: React.FC = () => {\r\n    return <header className={s.header}>\r\n        <img\r\n            src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRgPIy0hwSFb9IsEugadxiIDd1Mvp5DYDT2Vw&usqp=CAU'/>\r\n\r\n        <div className={s.loginBlock}>\r\n            <NavLink to={'/login'}>Login</NavLink>\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;\r\n\r\n","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\Profile.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\Message\\Message.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["133","134"],"import React from \"react\";\r\nimport c from './ProfileInfo.module.css';\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {ProfileType} from \"../../../Redux/profile-reducer\";\r\n\r\n\r\ntype ProfileInfoType = {\r\n    profile: ProfileType | null\r\n}\r\n\r\nexport const ProfileInfo: React.FC<ProfileInfoType> = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            <img src={'https://images.unsplash.com/photo-1546182990-dffeafbe841d?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8YW5pbWFsfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&w=1000&q=80'} alt={'Profile photo'}/>\r\n        </div>\r\n        <div className={c.descriptionBlock}>\r\n            <img src={props.profile.photos.large} />\r\n            ava+description\r\n        </div>\r\n    </div>\r\n}\r\n\r\n","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["135"],"import React from \"react\";\r\nimport c from './Post.module.css';\r\n\r\ntype PostType = {\r\n    message:string\r\n    likesCount: number\r\n}\r\n\r\nconst Post: React.FC<PostType> = (props) => {\r\n    return (\r\n    <div className={c.item}>\r\n        <img\r\n            src='https://images.unsplash.com/photo-1445820200644-69f87d946277?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NHx8YW5pbWFsfGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'/>\r\n        {props.message}\r\n        <div>\r\n        <span>like </span> {props.likesCount}\r\n\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Post;","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\profile-reducer.ts",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\dialogs-reducer.ts",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\sidebar-reducer.ts",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\redux-store.ts",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["136"],"import React from \"react\";\r\nimport {addPostActionCreator, onPostChangeActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {ActionsTypes, RootStateType} from \"../../../Redux/store\";\r\n\r\nlet mapStateToProps = (state:RootStateType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    updateNewPostText:(value:string) => void\r\n    addPost:(value:string) => void\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch:(action: ActionsTypes) => void):mapDispatchToPropsType => {\r\n    return {\r\n        updateNewPostText:(value:string) => {\r\n            let action = onPostChangeActionCreator(value)\r\n            dispatch(action);\r\n        },\r\n        addPost: (value: string) => {\r\n            dispatch(addPostActionCreator(value));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\DialogsContainer.tsx",["137"],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\users-reducer.ts",["138"],"import {\r\n    FollowSuccessACType,\r\n    SetCurrentPageACType,\r\n    SetTotalUsersCountACType,\r\n    SetUsersACType,\r\n    UnfollowSuccessACType,\r\n    UsersStateType,\r\n    UserType,\r\n    ToggleIsFetchingACType, ToggleIsFollowingInProgressACType,\r\n} from \"./storeType\";\r\nimport {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport const FOLLOW = 'FOLLOW';\r\nexport const UNFOLLOW = 'UNFOLLOW';\r\nexport const SET_USERS = 'SET_USERS';\r\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nexport const SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nexport const TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nexport const TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n};\r\n\r\nexport type ActionsTypes =\r\n    FollowSuccessACType\r\n    | UnfollowSuccessACType\r\n    | SetUsersACType\r\n    | SetCurrentPageACType\r\n    | SetTotalUsersCountACType\r\n    | ToggleIsFetchingACType\r\n    | ToggleIsFollowingInProgressACType\r\n\r\nexport const usersReducer = (state: UsersStateType = initialState, action: ActionsTypes): UsersStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.count}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId: number): FollowSuccessACType => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    }\r\n}\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessACType => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    }\r\n}\r\nexport const setUsers = (users: UserType[]): SetUsersACType => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n}\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageACType => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    }\r\n}\r\nexport const setTotalUsersCount = (totalCount: number): SetTotalUsersCountACType => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        count: totalCount\r\n    }\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingACType => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    }\r\n}\r\nexport const toggleIsFollowingInProgress = (followingInProgress: boolean, userId:number): ToggleIsFollowingInProgressACType => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        followingInProgress,\r\n        userId,\r\n    }\r\n}\r\n\r\n\r\nexport const getUsers = (currentPage: number,pageSize: number) => {\r\n    return (dispatch:Dispatch<ActionsTypes>) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n        });\r\n    }\r\n}\r\n\r\nexport const follow = (userId:number) => {\r\n    return (dispatch: Dispatch<ActionsTypes>) => {\r\n        dispatch(toggleIsFollowingInProgress(true, userId))\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleIsFollowingInProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId:number) => {\r\n    return (dispatch: Dispatch<ActionsTypes>) => {\r\n        dispatch(toggleIsFollowingInProgress(true, userId))\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleIsFollowingInProgress(false, userId));\r\n            });\r\n    }\r\n}","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Users\\UsersContainer.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Users\\Users.tsx",["139","140"],"import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {UserType} from \"../../Redux/storeType\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {usersAPI} from \"../../api/api\";\r\n\r\ntype UsersProps = {\r\n    users: Array<UserType>\r\n    follow: (id: number) => void\r\n    unfollow: (userId: number) => void\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    onPageChanged: (p: number) => void\r\n    followingInProgress: number[]\r\n}\r\n\r\nexport let Users = (props: UsersProps) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages: number[] = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n\r\n                return <span className={props.currentPage === p ? styles.selectedPage : \"\"}\r\n                             onClick={(e) => {\r\n                                 props.onPageChanged(p)\r\n                             }}> {p} </span>\r\n            })}\r\n        </div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n        <span>\r\n            <div>\r\n                <NavLink to={'/profile/' + u.id}>\r\n                <img alt={'waiting'} src={u.photos.small != null ? u.photos.small : userPhoto} className={styles.userPhoto}/>\r\n                </NavLink>\r\n    </div>\r\n    <div>\r\n    {u.followed\r\n        ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                  onClick={() => { props.unfollow(u.id) }} >Unfollow</button>\r\n        : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                  onClick={() => { props.follow(u.id) }} >Follow</button>}\r\n    </div>\r\n    </span>\r\n                <span>\r\n    <span>\r\n        <div>{u.name}</div><div>{u.status}</div>\r\n    </span>\r\n    <span>\r\n    <div>{'u.location.city'}</div>\r\n    <div>{'u.location.country'}</div>\r\n    </span>\r\n    </span>\r\n            </div>)\r\n        }\r\n    </div>\r\n}","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\common\\Preloader\\Preloader.tsx",["141"],"import React from \"react\";\r\nimport preloader from '../../../assets/images/preloader.gif'\r\n\r\nexport let Preloader = () => {\r\n    return <>\r\n        <img src={preloader}/>\r\n    </>\r\n}","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\ProfileContainer.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\auth-reducer.ts",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Header\\HeaderContainer.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\api\\api.ts",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Login\\Login.tsx",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"142","replacedBy":"146"},{"ruleId":"144","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":31,"column":21,"nodeType":"150","messageId":"151","endLine":31,"endColumn":23},{"ruleId":"152","severity":1,"message":"153","line":7,"column":9,"nodeType":"154","endLine":8,"endColumn":120},{"ruleId":"155","severity":1,"message":"156","line":18,"column":13,"nodeType":"154","endLine":18,"endColumn":196},{"ruleId":"152","severity":1,"message":"153","line":21,"column":13,"nodeType":"154","endLine":21,"endColumn":53},{"ruleId":"152","severity":1,"message":"153","line":12,"column":9,"nodeType":"154","endLine":13,"endColumn":182},{"ruleId":"157","severity":1,"message":"158","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"157","severity":1,"message":"158","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"148","severity":1,"message":"161","line":74,"column":65,"nodeType":"150","messageId":"151","endLine":74,"endColumn":67},{"ruleId":"157","severity":1,"message":"162","line":6,"column":8,"nodeType":"159","messageId":"160","endLine":6,"endColumn":13},{"ruleId":"157","severity":1,"message":"163","line":7,"column":9,"nodeType":"159","messageId":"160","endLine":7,"endColumn":17},{"ruleId":"152","severity":1,"message":"153","line":6,"column":9,"nodeType":"154","endLine":6,"endColumn":31},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],["164"],["165"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","Expected '!==' and instead saw '!='.","'axios' is defined but never used.","'usersAPI' is defined but never used.","no-global-assign","no-unsafe-negation"]