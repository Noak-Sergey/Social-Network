[{"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\index.tsx":"1","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\reportWebVitals.js":"2","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\store.ts":"3","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\App.tsx":"4","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\Dialogs.tsx":"5","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Navbar\\Navbar.tsx":"6","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Header\\Header.tsx":"7","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\Profile.tsx":"8","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\Message\\Message.tsx":"9","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"10","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"11","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"12","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"13","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\profile-reducer.ts":"14","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\dialogs-reducer.ts":"15","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\sidebar-reducer.ts":"16","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\redux-store.ts":"17","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"18","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\DialogsContainer.tsx":"19","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\users-reducer.ts":"20","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Users\\UsersContainer.tsx":"21","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Users\\Users.tsx":"22","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\common\\Preloader\\Preloader.tsx":"23","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\ProfileContainer.tsx":"24"},{"size":667,"mtime":1623593778698,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":3393,"mtime":1619203830499,"results":"28","hashOfConfig":"26"},{"size":1146,"mtime":1626604789818,"results":"29","hashOfConfig":"26"},{"size":1458,"mtime":1624269231019,"results":"30","hashOfConfig":"26"},{"size":1049,"mtime":1626455234558,"results":"31","hashOfConfig":"26"},{"size":361,"mtime":1614622657054,"results":"32","hashOfConfig":"26"},{"size":407,"mtime":1626707361208,"results":"33","hashOfConfig":"26"},{"size":247,"mtime":1614622401799,"results":"34","hashOfConfig":"26"},{"size":412,"mtime":1614622401792,"results":"35","hashOfConfig":"26"},{"size":1374,"mtime":1624269231101,"results":"36","hashOfConfig":"26"},{"size":790,"mtime":1626709051666,"results":"37","hashOfConfig":"26"},{"size":569,"mtime":1614623992327,"results":"38","hashOfConfig":"26"},{"size":2535,"mtime":1626707342496,"results":"39","hashOfConfig":"26"},{"size":1509,"mtime":1624269230998,"results":"40","hashOfConfig":"26"},{"size":176,"mtime":1624269231089,"results":"41","hashOfConfig":"26"},{"size":710,"mtime":1624269231029,"results":"42","hashOfConfig":"26"},{"size":1095,"mtime":1624269230987,"results":"43","hashOfConfig":"26"},{"size":951,"mtime":1624269765087,"results":"44","hashOfConfig":"26"},{"size":2870,"mtime":1626708537145,"results":"45","hashOfConfig":"26"},{"size":3820,"mtime":1626604580398,"results":"46","hashOfConfig":"26"},{"size":2073,"mtime":1626708635506,"results":"47","hashOfConfig":"26"},{"size":181,"mtime":1626444355885,"results":"48","hashOfConfig":"26"},{"size":1501,"mtime":1626707751708,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"ebhogb",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\index.tsx",[],["107","108"],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\reportWebVitals.js",[],["109","110"],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\store.ts",[],["111","112"],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\App.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\Dialogs.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Navbar\\Navbar.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Header\\Header.tsx",["113"],"import React from 'react';\r\nimport c from './Header.module.css';\r\n\r\ntype HeaderType = {\r\n\r\n}\r\n\r\nconst Header: React.FC<HeaderType> = () => {\r\n    return <header className={c.header}>\r\n        <img\r\n            src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRgPIy0hwSFb9IsEugadxiIDd1Mvp5DYDT2Vw&usqp=CAU'/>\r\n    </header>\r\n}\r\n\r\nexport default Header;","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\Profile.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\Message\\Message.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["114"],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["115"],"import React from \"react\";\r\nimport c from './Post.module.css';\r\n\r\ntype PostType = {\r\n    message:string\r\n    likesCount: number\r\n}\r\n\r\nconst Post: React.FC<PostType> = (props) => {\r\n    return (\r\n    <div className={c.item}>\r\n        <img\r\n            src='https://images.unsplash.com/photo-1445820200644-69f87d946277?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NHx8YW5pbWFsfGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'/>\r\n        {props.message}\r\n        <div>\r\n        <span>like </span> {props.likesCount}\r\n\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Post;","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\profile-reducer.ts",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\dialogs-reducer.ts",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\sidebar-reducer.ts",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\redux-store.ts",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["116"],"import React from \"react\";\r\nimport {addPostActionCreator, onPostChangeActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {ActionsTypes, RootStateType} from \"../../../Redux/store\";\r\n\r\nlet mapStateToProps = (state:RootStateType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    updateNewPostText:(value:string) => void\r\n    addPost:(value:string) => void\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch:(action: ActionsTypes) => void):mapDispatchToPropsType => {\r\n    return {\r\n        updateNewPostText:(value:string) => {\r\n            let action = onPostChangeActionCreator(value)\r\n            dispatch(action);\r\n        },\r\n        addPost: (value: string) => {\r\n            dispatch(addPostActionCreator(value));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Dialogs\\DialogsContainer.tsx",["117"],"import React from \"react\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../Redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../Redux/redux-store\";\r\nimport {ActionsTypes} from \"../../Redux/storeType\";\r\n\r\n\r\nlet mapStateToProps = (state:RootStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    updateNewMessageBody:(body:string) => void\r\n    sendMessage:() => void\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch:(action: ActionsTypes) => void):MapDispatchToPropsType => {\r\n    return {\r\n        updateNewMessageBody: (body:string) => {\r\n            dispatch(updateNewMessageBodyCreator(body))\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator())\r\n        }\r\n    }\r\n}\r\n\r\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\Redux\\users-reducer.ts",[],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Users\\UsersContainer.tsx",["118"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { follow, setCurrentPage, setTotalUsersCount, setUsers, unfollow,toggleIsFetching } from \"../../Redux/users-reducer\";\r\nimport { AppDispatchType, AppStateType } from \"../../Redux/redux-store\";\r\nimport { UserType } from \"../../Redux/storeType\";\r\nimport axios from \"axios\";\r\nimport { Users } from \"./Users\";\r\nimport { Preloader } from \"../common/Preloader/Preloader\";\r\n\r\ntype UsersAPIComponentProps = {\r\n    users: Array<UserType>\r\n    follow: (id: number) => void\r\n    unfollow: (userId: number) => void\r\n    setUsers: (users: UserType[]) => void\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    isFetching:boolean\r\n    toggleIsFetching:(isFetching:boolean) => void\r\n}\r\n\r\ntype UsersComponentStateType = {\r\n    asd: number\r\n}\r\n\r\nexport class UsersAPIComponent extends React.Component<UsersAPIComponentProps, UsersComponentStateType> {\r\n\r\n    constructor(props: UsersAPIComponentProps) {\r\n        super(props);\r\n        this.state = {\r\n            asd: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items)\r\n                this.props.setTotalUsersCount(response.data.totalCount)\r\n            });\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch: AppDispatchType) => {\r\n//     return {\r\n//         follow: (userId: number) => {\r\n//             dispatch(follow(userId));\r\n//         },\r\n//         unfollow: (userId: number) => {\r\n//             dispatch(unfollow(userId));\r\n//         },\r\n//         setUsers: (users: UserType[]) => {\r\n//             dispatch(setUsers(users));\r\n//         },\r\n//         setCurrentPage: (pageNumber: number) => {\r\n//             dispatch(setCurrentPage(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalCount: number) => {\r\n//             dispatch(setTotalUsersCount(totalCount))\r\n//         },\r\n//         toggleIsFetching:(isFetching:boolean) => {\r\n//             dispatch(toggleIsFetching(isFetching))\r\n//         }\r\n//     }\r\n// };\r\n\r\nconst UsersContainer = connect(mapStateToProps,\r\n    {follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching})\r\n(UsersAPIComponent)\r\n\r\nexport default UsersContainer;","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Users\\Users.tsx",["119"],"C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\common\\Preloader\\Preloader.tsx",["120"],"import React from \"react\";\r\nimport preloader from '../../../assets/images/preloader.gif'\r\n\r\nexport let Preloader = () => {\r\n    return <>\r\n        <img src={preloader}/>\r\n    </>\r\n}","C:\\Work-and-Home\\Programming\\it-incubator\\react\\projects\\first-project\\waySamurai-1\\src\\components\\Profile\\ProfileContainer.tsx",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"121","replacedBy":"125"},{"ruleId":"123","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":10,"column":9,"nodeType":"129","endLine":11,"endColumn":120},{"ruleId":"127","severity":1,"message":"128","line":21,"column":13,"nodeType":"129","endLine":21,"endColumn":53},{"ruleId":"127","severity":1,"message":"128","line":12,"column":9,"nodeType":"129","endLine":13,"endColumn":182},{"ruleId":"130","severity":1,"message":"131","line":1,"column":8,"nodeType":"132","messageId":"133","endLine":1,"endColumn":13},{"ruleId":"130","severity":1,"message":"131","line":1,"column":8,"nodeType":"132","messageId":"133","endLine":1,"endColumn":13},{"ruleId":"130","severity":1,"message":"134","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":25},{"ruleId":"127","severity":1,"message":"128","line":42,"column":17,"nodeType":"129","endLine":42,"endColumn":110},{"ruleId":"127","severity":1,"message":"128","line":6,"column":9,"nodeType":"129","endLine":6,"endColumn":31},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],["135"],["136"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'AppDispatchType' is defined but never used.","no-global-assign","no-unsafe-negation"]